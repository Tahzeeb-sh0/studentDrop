version: "3.9"

services:
  db:
    image: postgres:15
    container_name: sd_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-student}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-studentpass}
      POSTGRES_DB: ${POSTGRES_DB:-studentdrop}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: sd_redis
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
    container_name: sd_backend
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-student}:${POSTGRES_PASSWORD:-studentpass}@db:5432/${POSTGRES_DB:-studentdrop}
      REDIS_URL: redis://redis:6379
      NODE_ENV: development
      PORT: 4000
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    command: ["npm", "run", "dev"]

  ml_service:
    build:
      context: ./ml_service
    container_name: sd_ml
    env_file:
      - ./.env
    environment:
      PORT: 8000
    ports:
      - "8000:8000"
    volumes:
      - ./ml_service:/app
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  frontend:
    build:
      context: ./frontend
    container_name: sd_frontend
    env_file:
      - ./.env
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    command: ["npm", "run", "dev"]
    depends_on:
      - backend

volumes:
  db_data:
